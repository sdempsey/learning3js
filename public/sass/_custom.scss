// /*  ==========================================================================
//      USEFUL FUNCTIONS AND MIXINS
//     ==========================================================================  */

$base-font-size: 16px;

@function pxtoem($px, $base: $base-font-size) {
    @return ($px / $base) + 0em;
}

@mixin center($extend: true) {
    @if $extend {
        @extend %center;
    } @else {
        transform: translateX(-50%) translateY(-50%);
        position: absolute;
        top: 50%;
        left: 50%;          
    }
}

%center {
    @include center($extend: false);
}

@mixin maintain-aspect-ratio($width, $height) {
    position: relative;
    &:before{
        display: block;
        content: " ";
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }

    > .content{
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }
}

@mixin background-size($size: cover) {
    background-size: $size;
    -ms-behavior: url('/library/js/polyfill/backgroundsize.min.htc');
    @if $size == contain {
        background-repeat: no-repeat;
    }
}

@mixin clearfix($extend: true) {
    @if $extend {
        @extend %clearfix;
    } @else {
        &:after {
            content: '';
            display: table;
            clear: both;
        }
    }
}

%clearfix {
  @include clearfix($extend: false);
}

@mixin coverer($extend: true) {
    @if $extend {
        @extend %coverer;
    } @else {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
}

%coverer {
    @include coverer($extend: false);
}

@mixin triangle($side, $width, $height, $color) {
    width: 0;
    height: 0;
    border-style: inset;

    @if ($side == 'top') {
        border-width: 0 ($width/2)+0px $height+0px ($width/2)+0px;
        border-color: rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) $color rgba(255, 255, 255, 0);
        border-bottom-style: solid;
    }
    @else if ($side == 'right') {
        border-width: ($height/2)+0px 0 ($height/2)+0px $width+0px;
        border-color: rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) $color;
        border-left-style: solid;
    }
    @else if ($side == 'bottom') {
        border-width: $height+0px ($width/2)+0px 0 ($width/2)+0px;
        border-color:$color rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgba(255, 255, 255, 0);
        border-top-style: solid;
    }
    @else if ($side == 'left') {
        border-width: ($height/2)+0px $width+0px ($height/2)+0px 0;
        border-color: rgba(255, 255, 255, 0) $color rgba(255, 255, 255, 0) rgba(255, 255, 255, 0);
        border-right-style: solid;
    }
}

// /*   jQuery Timing Functions
//     --------------------------------------------------------------------------  */

// EASE IN
$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);
$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);
$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);
$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);
$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);
$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);
$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);
$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);

// EASE OUT
$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);
$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);
$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);
$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);
$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);
$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);
$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);
$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);

// EASE IN OUT
$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);
$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);
$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);
$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);
$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);
$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);
$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);
$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);

@mixin font-smoothing($extend: true) {
    @if $extend {
        @extend %font-smoothing;
    } @else {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale
    }
}

%font-smoothing {
    @include font-smoothing($extend: false);
}